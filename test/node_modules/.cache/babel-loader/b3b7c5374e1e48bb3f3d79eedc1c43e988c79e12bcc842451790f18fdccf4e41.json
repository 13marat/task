{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => {\n      const cart = [...state, action.payload];\n      return cart;\n    },\n    updateCart: (state, action) => {\n      const cart = state.filter(item => item.id !== action.payload.id);\n      const index = cart.indexOf(action.payload);\n      const start = cart.slice(0, index);\n      const end = cart.slice(index + 1);\n      console.log(index);\n      console.log(start);\n      console.log(end);\n      return [[...start, {\n        ...action.payload,\n        count: action.payload.count + 1\n      }, ...end]];\n    },\n    removeItem: (state, action) => {\n      const cart = state.filter(item => item.id !== action.payload.id);\n      return cart;\n    }\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addCart","state","action","cart","payload","updateCart","filter","item","id","index","indexOf","start","slice","end","console","log","count","removeItem","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart: productsType[]  = [...state, action.payload]\r\n            return cart\r\n        },\r\n\r\n        updateCart: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart = state.filter((item: productsType) => item.id !== action.payload.id)\r\n            const index = cart.indexOf(action.payload)\r\n            const start = cart.slice(0, index)\r\n            const end = cart.slice(index + 1)\r\n            console.log(index)\r\n            console.log(start)\r\n            console.log(end)\r\n\r\n            return  [[...start, {...action.payload, count: action.payload.count + 1} ,...end]]\r\n        },\r\n        \r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart = state.filter((item: productsType) => item.id !== action.payload.id)\r\n            return cart\r\n        },\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer\r\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAG7D,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU;MAC1E,MAAMC,IAAoB,GAAI,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;MACxD,OAAOD,IAAI;IACf,CAAC;IAEDE,UAAU,EAAEA,CAACJ,KAAqB,EAAEC,MAAmC,KAAU;MAC7E,MAAMC,IAAI,GAAGF,KAAK,CAACK,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAChF,MAAMC,KAAK,GAAGN,IAAI,CAACO,OAAO,CAACR,MAAM,CAACE,OAAO,CAAC;MAC1C,MAAMO,KAAK,GAAGR,IAAI,CAACS,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC;MAClC,MAAMI,GAAG,GAAGV,IAAI,CAACS,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;MACjCK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;MAClBK,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClBG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAEhB,OAAQ,CAAC,CAAC,GAAGF,KAAK,EAAE;QAAC,GAAGT,MAAM,CAACE,OAAO;QAAEY,KAAK,EAAEd,MAAM,CAACE,OAAO,CAACY,KAAK,GAAG;MAAC,CAAC,EAAE,GAAGH,GAAG,CAAC,CAAC;IACtF,CAAC;IAEDI,UAAU,EAAEA,CAAChB,KAAqB,EAAEC,MAAmC,KAAU;MAC7E,MAAMC,IAAI,GAAGF,KAAK,CAACK,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAChF,OAAOL,IAAI;IACf;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,OAAO;EAAEK,UAAU;EAAEY;AAAU,CAAC,GAAGrB,SAAS,CAACsB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAIvB,SAAS,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
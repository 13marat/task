{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => {\n      const cart = [...state, action.payload];\n      return cart;\n    },\n    updateCart: (state, action) => {\n      const data = action.payload[0];\n      const num = action.payload[1];\n      if (data) {\n        const cart = current(state);\n        const index = cart.indexOf(action.payload[0]);\n        const start = cart.slice(0, index);\n        const end = cart.slice(index + 1);\n        return [...start, {\n          ...data,\n          count: data.count + num,\n          price: data.price + num * (data.price / data.count)\n        }, ...end];\n      }\n    },\n    removeItem: (state, action) => {\n      const cart = state.filter(item => item.id !== action.payload.id);\n      return cart;\n    }\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","cartSlice","name","initialState","reducers","addCart","state","action","cart","payload","updateCart","data","num","index","indexOf","start","slice","end","count","price","removeItem","filter","item","id","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart: productsType[]  = [...state, action.payload]\r\n            return cart\r\n        },\r\n        updateCart: (state: productsType[], action: PayloadAction<any>): any => {\r\n            const data = action.payload[0]\r\n            const num = action.payload[1]\r\n            if(data){\r\n                const cart = current(state)\r\n                const index = cart.indexOf(action.payload[0])\r\n                const start = cart.slice(0, index)\r\n                const end = cart.slice(index + 1)\r\n                return  [...start, {...data, count: data.count + num, price: data.price + num*(data.price / data.count)}, ...end]\r\n            }\r\n        },\r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart = state.filter((item: productsType) => item.id !== action.payload.id)\r\n            return cart\r\n        },\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer\r\n"],"mappings":"AAAA,SAAwBA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAItE,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU;MAC1E,MAAMC,IAAoB,GAAI,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;MACxD,OAAOD,IAAI;IACf,CAAC;IACDE,UAAU,EAAEA,CAACJ,KAAqB,EAAEC,MAA0B,KAAU;MACpE,MAAMI,IAAI,GAAGJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MAC9B,MAAMG,GAAG,GAAGL,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MAC7B,IAAGE,IAAI,EAAC;QACJ,MAAMH,IAAI,GAAGR,OAAO,CAACM,KAAK,CAAC;QAC3B,MAAMO,KAAK,GAAGL,IAAI,CAACM,OAAO,CAACP,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAMM,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC;QAClC,MAAMI,GAAG,GAAGT,IAAI,CAACQ,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;QACjC,OAAQ,CAAC,GAAGE,KAAK,EAAE;UAAC,GAAGJ,IAAI;UAAEO,KAAK,EAAEP,IAAI,CAACO,KAAK,GAAGN,GAAG;UAAEO,KAAK,EAAER,IAAI,CAACQ,KAAK,GAAGP,GAAG,IAAED,IAAI,CAACQ,KAAK,GAAGR,IAAI,CAACO,KAAK;QAAC,CAAC,EAAE,GAAGD,GAAG,CAAC;MACrH;IACJ,CAAC;IACDG,UAAU,EAAEA,CAACd,KAAqB,EAAEC,MAAmC,KAAU;MAC7E,MAAMC,IAAI,GAAGF,KAAK,CAACe,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKhB,MAAM,CAACE,OAAO,CAACc,EAAE,CAAC;MAChF,OAAOf,IAAI;IACf;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,OAAO;EAAEK,UAAU;EAAEU;AAAU,CAAC,GAAGnB,SAAS,CAACuB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAIxB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
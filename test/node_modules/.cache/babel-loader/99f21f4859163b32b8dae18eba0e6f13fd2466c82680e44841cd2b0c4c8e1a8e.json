{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI4\\\\Desktop\\\\task\\\\test\\\\src\\\\Components\\\\Singin\\\\Signin.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport useSignin from './useSignin';\nimport { validationSchema } from '../../validation';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const {\n    handleSubmit\n  } = useSignin();\n  const items = useSelector(state => state.items);\n  const initial = {\n    username: \"Bret\",\n    email: \"Sincere@april.biz\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initial,\n        validationSchema: validationSchema,\n        onSubmit: values => {\n          handleSubmit(values);\n        },\n        children: _ref => {\n          let {\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(Field, {\n              name: \"email\",\n              validate: validationSchema\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 47\n            }, this), \"Username\", /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              validate: validationSchema\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Signin, \"t/GJM40PeGBDGvU3QAMydFDcUfk=\", false, function () {\n  return [useSignin, useSelector];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","Formik","Field","Form","useSignin","validationSchema","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Signin","_s","handleSubmit","items","state","initial","username","email","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","onSubmit","values","_ref","errors","touched","name","validate","color","type","_c","$RefreshReg$"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Components/Singin/Signin.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Formik, Field, Form} from 'formik'\r\nimport useSignin from './useSignin'\r\nimport { productsType, userEmail } from '../../types/Types'\r\nimport { validationSchema } from '../../validation'\r\nimport { useSelector } from 'react-redux'\r\nimport Recomendations from './Components/Recomendations'\r\n\r\nconst Signin = () => {\r\n  const {handleSubmit} = useSignin()\r\n  const items: productsType[] = useSelector((state: any) => state.items)\r\n\r\n\r\n  const initial: userEmail = {\r\n    username: \"Bret\",\r\n    email: \"Sincere@april.biz\"\r\n  }\r\n  \r\n  return (\r\n    <>\r\n\r\n      <div style={{width: \"100px\"}}>\r\n        <h1>Signin</h1>\r\n        <Formik initialValues = {initial}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n          handleSubmit(values)\r\n        }}>\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n            Email\r\n            <Field name=\"email\" validate={validationSchema}/>\r\n            {errors.email && touched.email && <div style={{color: \"red\"}}>{errors.email}</div>}\r\n            Username\r\n            <Field name=\"username\" validate={validationSchema} />\r\n            {errors.username && touched.username && <div style={{color: \"red\"}}>{errors.username}</div>}\r\n            <button type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signin"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
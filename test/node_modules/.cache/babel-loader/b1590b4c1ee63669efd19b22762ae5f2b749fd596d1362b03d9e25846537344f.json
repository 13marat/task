{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => {\n      const cart = [...state, action.payload];\n      return cart;\n    },\n    updateCart: (state, action) => {\n      const cart = state.filter(item => item.id !== action.payload.id);\n      return [...cart, action.payload];\n    },\n    removeItem: (state, action) => {\n      const cart = state.filter(item => item.id !== action.payload.id);\n      return cart;\n    },\n    insertItem: (state, action) => {\n      return [...state.slice(0, action.payload), action.payload, ...state.slice(action.payload)];\n    }\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addCart","state","action","cart","payload","updateCart","filter","item","id","removeItem","insertItem","slice","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart: productsType[]  = [...state, action.payload]\r\n            return cart\r\n        },\r\n\r\n        updateCart: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart = state.filter((item: productsType) => item.id !== action.payload.id)\r\n            return [...cart, action.payload]\r\n        },\r\n        \r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => {\r\n            const cart = state.filter((item: productsType) => item.id !== action.payload.id)\r\n            return cart\r\n        },\r\n        insertItem:(state: productsType[], action: PayloadAction<any>): any=>  {\r\n            return [\r\n              ...state.slice(0, action.payload),\r\n              action.payload,\r\n              ...state.slice(action.payload)\r\n            ]\r\n          }\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer\r\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAG7D,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU;MAC1E,MAAMC,IAAoB,GAAI,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;MACxD,OAAOD,IAAI;IACf,CAAC;IAEDE,UAAU,EAAEA,CAACJ,KAAqB,EAAEC,MAAmC,KAAU;MAC7E,MAAMC,IAAI,GAAGF,KAAK,CAACK,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAChF,OAAO,CAAC,GAAGL,IAAI,EAAED,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IAEDK,UAAU,EAAEA,CAACR,KAAqB,EAAEC,MAAmC,KAAU;MAC7E,MAAMC,IAAI,GAAGF,KAAK,CAACK,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,CAAC;MAChF,OAAOL,IAAI;IACf,CAAC;IACDO,UAAU,EAACA,CAACT,KAAqB,EAAEC,MAA0B,KAAU;MACnE,OAAO,CACL,GAAGD,KAAK,CAACU,KAAK,CAAC,CAAC,EAAET,MAAM,CAACE,OAAO,CAAC,EACjCF,MAAM,CAACE,OAAO,EACd,GAAGH,KAAK,CAACU,KAAK,CAACT,MAAM,CAACE,OAAO,CAAC,CAC/B;IACH;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,OAAO;EAAEK,UAAU;EAAEI;AAAU,CAAC,GAAGb,SAAS,CAACgB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAIjB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
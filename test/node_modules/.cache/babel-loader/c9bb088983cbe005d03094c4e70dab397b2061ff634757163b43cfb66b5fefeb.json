{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { usersReducer } from './Slices/usersSlice';\nimport { itemsReducer } from './Slices/ItemsSlice';\nimport { currentReducer } from './Slices/currentUser';\nimport { cartReducer } from './Slices/cartSlice';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE, persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  currentUser: currentReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: {\n    users: usersReducer,\n    items: itemsReducer,\n    cart: cartReducer,\n    current: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","usersReducer","itemsReducer","currentReducer","cartReducer","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","REHYDRATE","persistReducer","persistStore","storage","rootReducer","currentUser","persistConfig","key","persistedReducer","store","reducer","users","items","cart","current","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Store.ts"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport { usersReducer } from './Slices/usersSlice'\r\nimport { itemsReducer } from './Slices/ItemsSlice'\r\nimport { currentReducer } from './Slices/currentUser'\r\nimport { cartReducer } from './Slices/cartSlice'\r\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE, persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    currentUser: currentReducer\r\n})\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n const store = configureStore({\r\n    reducer: {\r\n        users: usersReducer,\r\n        items: itemsReducer,\r\n        cart: cartReducer,\r\n        current: persistedReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    })\r\n})\r\n\r\nexport const persistor = persistStore(store)\r\nexport default store\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,WAAW,GAAGf,eAAe,CAAC;EAChCgB,WAAW,EAAEZ;AACjB,CAAC,CAAC;AAEF,MAAMa,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXJ;AACJ,CAAC;AACD,MAAMK,gBAAgB,GAAGP,cAAc,CAACK,aAAa,EAAEF,WAAW,CAAC;AAElE,MAAMK,KAAK,GAAGnB,cAAc,CAAC;EAC1BoB,OAAO,EAAE;IACLC,KAAK,EAAEpB,YAAY;IACnBqB,KAAK,EAAEpB,YAAY;IACnBqB,IAAI,EAAEnB,WAAW;IACjBoB,OAAO,EAAEN;EACb,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACvB,KAAK,EAAEK,SAAS,EAAEJ,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMoB,SAAS,GAAGjB,YAAY,CAACO,KAAK,CAAC;AAC5C,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
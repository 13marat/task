{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => [...state, action.payload],\n    updateCart: (state, action) => {\n      const data = action.payload[0];\n      const num = action.payload[1];\n      const cart = current(state);\n      const itemsIndex = cart.findIndex(item => item.id === data.id);\n      const start = cart.slice(0, itemsIndex);\n      const end = cart.slice(itemsIndex + 1);\n\n      // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\n      return [...start, {\n        ...cart[itemsIndex],\n        count: cart[itemsIndex].count + num * 1,\n        price: cart[itemsIndex].price + num * (cart[itemsIndex].price / cart[itemsIndex].count)\n      }, ...end];\n    },\n    removeItem: (state, action) => state.filter(item => item.id !== action.payload.id)\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","cartSlice","name","initialState","reducers","addCart","state","action","payload","updateCart","data","num","cart","itemsIndex","findIndex","item","id","start","slice","end","count","price","removeItem","filter","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => [...state, action.payload],  \r\n        updateCart: (state: productsType[], action: PayloadAction<any>): any => {\r\n            const data: productsType = action.payload[0]\r\n            const num: number = action.payload[1]\r\n            const cart: productsType[] = current(state)\r\n            const itemsIndex: number = cart.findIndex(item => item.id === data.id)\r\n            const start = cart.slice(0, itemsIndex)\r\n            const end = cart.slice(itemsIndex + 1)\r\n\r\n            // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\r\n            return  [...start, {...cart[itemsIndex], count: cart[itemsIndex].count + num * 1, price: cart[itemsIndex].price + num * (cart[itemsIndex].price / cart[itemsIndex].count)}, ...end]\r\n        },\r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => state.filter((item: productsType) => item.id !== action.payload.id),\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer\r\n"],"mappings":"AAAA,SAAwBA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAItE,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACxGC,UAAU,EAAEA,CAACH,KAAqB,EAAEC,MAA0B,KAAU;MACpE,MAAMG,IAAkB,GAAGH,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MAC5C,MAAMG,GAAW,GAAGJ,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MACrC,MAAMI,IAAoB,GAAGZ,OAAO,CAACM,KAAK,CAAC;MAC3C,MAAMO,UAAkB,GAAGD,IAAI,CAACE,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;MACtE,MAAMC,KAAK,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC,EAAEL,UAAU,CAAC;MACvC,MAAMM,GAAG,GAAGP,IAAI,CAACM,KAAK,CAACL,UAAU,GAAG,CAAC,CAAC;;MAEtC;MACA,OAAQ,CAAC,GAAGI,KAAK,EAAE;QAAC,GAAGL,IAAI,CAACC,UAAU,CAAC;QAAEO,KAAK,EAAER,IAAI,CAACC,UAAU,CAAC,CAACO,KAAK,GAAGT,GAAG,GAAG,CAAC;QAAEU,KAAK,EAAET,IAAI,CAACC,UAAU,CAAC,CAACQ,KAAK,GAAGV,GAAG,IAAIC,IAAI,CAACC,UAAU,CAAC,CAACQ,KAAK,GAAGT,IAAI,CAACC,UAAU,CAAC,CAACO,KAAK;MAAC,CAAC,EAAE,GAAGD,GAAG,CAAC;IACvL,CAAC;IACDG,UAAU,EAAEA,CAAChB,KAAqB,EAAEC,MAAmC,KAAUD,KAAK,CAACiB,MAAM,CAAER,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAACQ,EAAE;EACvJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACX,OAAO;EAAEI,UAAU;EAAEa;AAAU,CAAC,GAAGrB,SAAS,CAACuB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAIxB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { setCurrentUser } from '../../Slices/currentUser';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nconst useSignin = () => {\n  _s();\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [emailState, setEmailState] = useState(\"\");\n  const [userState, setUserState] = useState(\"\");\n  function validateEmail(value) {\n    let emailMsg = \"\";\n    if (!value) {\n      emailMsg = \"enter email\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      emailMsg = \"invalid email address\";\n    }\n    return emailMsg;\n  }\n  function validateUsername(value) {\n    let userMsg = \"\";\n    if (!value) {\n      userMsg = \"enter user\";\n    }\n    return userMsg;\n  }\n  const handleSubmit = userData => {\n    const current = users.find(user => user.username === userData.username && user.email === userData.email);\n    if (current && dispatch(setCurrentUser(current))) {\n      navigate(\"/items\");\n    } else {\n      navigate(\"/error\");\n    }\n  };\n  return {\n    emailState,\n    userState,\n    validateEmail,\n    validateUsername,\n    handleSubmit\n  };\n};\n_s(useSignin, \"HXvjb8cub70lkGttW9DPvJYFrQo=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\nexport default useSignin;","map":{"version":3,"names":["useState","setCurrentUser","useDispatch","useSelector","useNavigate","useSignin","_s","users","state","dispatch","navigate","emailState","setEmailState","userState","setUserState","validateEmail","value","emailMsg","test","validateUsername","userMsg","handleSubmit","userData","current","find","user","username","email"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Components/Singin/useSignin.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { formType, userEmail, usersType } from '../../types/types'\r\nimport { setCurrentUser } from '../../Slices/currentUser'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst useSignin = () => {\r\n    const users = useSelector((state: any): any => state.users)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [emailState, setEmailState] = useState<string>(\"\")\r\n    const [userState, setUserState] = useState<string>(\"\")\r\n    \r\n    function validateEmail(value: string): formType{\r\n\r\n        let emailMsg: formType = \"\"\r\n          if(!value){\r\n            emailMsg = \"enter email\"\r\n          }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)){\r\n            emailMsg = \"invalid email address\"\r\n          }\r\n          return emailMsg\r\n        }\r\n        \r\n        function validateUsername(value: string): formType{\r\n          let userMsg: formType = \"\"\r\n          if (!value) {\r\n            userMsg = \"enter user\"\r\n          }\r\n          return userMsg\r\n        }\r\n\r\n        const handleSubmit = (userData: userEmail): void =>{\r\n            const current = users.find((user: usersType) => user.username === userData.username && user.email === userData.email)\r\n            if(current && dispatch(setCurrentUser(current))){\r\n              navigate(\"/items\") \r\n            }else{\r\n              navigate(\"/error\")\r\n            }\r\n          }\r\n  return {emailState, userState, validateEmail, validateUsername, handleSubmit}\r\n}\r\n\r\nexport default useSignin"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAU,IAAUA,KAAK,CAACD,KAAK,CAAC;EAC3D,MAAME,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAEtD,SAASe,aAAaA,CAACC,KAAa,EAAW;IAE3C,IAAIC,QAAkB,GAAG,EAAE;IACzB,IAAG,CAACD,KAAK,EAAC;MACRC,QAAQ,GAAG,aAAa;IAC1B,CAAC,MAAK,IAAG,CAAC,2CAA2C,CAACC,IAAI,CAACF,KAAK,CAAC,EAAC;MAChEC,QAAQ,GAAG,uBAAuB;IACpC;IACA,OAAOA,QAAQ;EACjB;EAEA,SAASE,gBAAgBA,CAACH,KAAa,EAAW;IAChD,IAAII,OAAiB,GAAG,EAAE;IAC1B,IAAI,CAACJ,KAAK,EAAE;MACVI,OAAO,GAAG,YAAY;IACxB;IACA,OAAOA,OAAO;EAChB;EAEA,MAAMC,YAAY,GAAIC,QAAmB,IAAU;IAC/C,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,IAAI,CAAEC,IAAe,IAAKA,IAAI,CAACC,QAAQ,KAAKJ,QAAQ,CAACI,QAAQ,IAAID,IAAI,CAACE,KAAK,KAAKL,QAAQ,CAACK,KAAK,CAAC;IACrH,IAAGJ,OAAO,IAAId,QAAQ,CAACR,cAAc,CAACsB,OAAO,CAAC,CAAC,EAAC;MAC9Cb,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAI;MACHA,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EACT,OAAO;IAACC,UAAU;IAAEE,SAAS;IAAEE,aAAa;IAAEI,gBAAgB;IAAEE;EAAY,CAAC;AAC/E,CAAC;AAAAf,EAAA,CAnCKD,SAAS;EAAA,QACGF,WAAW,EACRD,WAAW,EACXE,WAAW;AAAA;AAkChC,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
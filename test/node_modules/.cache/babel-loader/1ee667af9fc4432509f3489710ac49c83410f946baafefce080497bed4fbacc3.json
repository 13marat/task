{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useSignin = () => {\n  _s();\n  const [emailState, setEmailState] = useState(\"\");\n  const [userState, setUserState] = useState(\"\");\n  function validateEmail(value) {\n    let emailMsg;\n    if (!value) {\n      setEmailState(\"enter email\");\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      setEmailState(\"invalid email address\");\n    }\n    return emailMsg;\n  }\n  function validateUsername(value) {\n    let userMsg;\n    if (!value) {\n      setUserState(\"invalid email address\");\n    }\n    return userMsg;\n  }\n  return [emailState, setEmailState, userState, setUserState];\n};\n_s(useSignin, \"QB4qBnOI1w39x3EvwTbTmkeJPe0=\");\nexport default useSignin;","map":{"version":3,"names":["useState","useSignin","_s","emailState","setEmailState","userState","setUserState","validateEmail","value","emailMsg","test","validateUsername","userMsg"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Components/Singin/useSignin.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { formType } from '../../types/types'\r\n\r\nconst useSignin = () => {\r\n    \r\n    const [emailState, setEmailState] = useState<string>(\"\")\r\n    const [userState, setUserState] = useState<string>(\"\")\r\n    \r\n    function validateEmail(value: string): formType{\r\n\r\n        let emailMsg: formType\r\n          if(!value){\r\n            setEmailState(\"enter email\")\r\n          }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)){\r\n            setEmailState(\"invalid email address\")\r\n          }\r\n          return emailMsg\r\n        }\r\n        \r\n        function validateUsername(value: string): formType{\r\n          let userMsg: formType\r\n          if (!value) {\r\n            setUserState(\"invalid email address\")\r\n          }\r\n          return userMsg\r\n        }\r\n  return [emailState, setEmailState, userState, setUserState]\r\n}\r\n\r\nexport default useSignin"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AAGvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAEtD,SAASO,aAAaA,CAACC,KAAa,EAAW;IAE3C,IAAIC,QAAkB;IACpB,IAAG,CAACD,KAAK,EAAC;MACRJ,aAAa,CAAC,aAAa,CAAC;IAC9B,CAAC,MAAK,IAAG,CAAC,2CAA2C,CAACM,IAAI,CAACF,KAAK,CAAC,EAAC;MAChEJ,aAAa,CAAC,uBAAuB,CAAC;IACxC;IACA,OAAOK,QAAQ;EACjB;EAEA,SAASE,gBAAgBA,CAACH,KAAa,EAAW;IAChD,IAAII,OAAiB;IACrB,IAAI,CAACJ,KAAK,EAAE;MACVF,YAAY,CAAC,uBAAuB,CAAC;IACvC;IACA,OAAOM,OAAO;EAChB;EACN,OAAO,CAACT,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,YAAY,CAAC;AAC7D,CAAC;AAAAJ,EAAA,CAxBKD,SAAS;AA0Bf,eAAeA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
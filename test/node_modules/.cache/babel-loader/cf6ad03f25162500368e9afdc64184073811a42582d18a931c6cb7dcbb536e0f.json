{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => [...state, action.payload],\n    updateCart: (state, action) => {\n      var _cart$find;\n      const data = action.payload[0];\n      const num = action.payload[1];\n      const cart = current(state);\n      const index = ((_cart$find = cart.find(item => item.id === data.id)) === null || _cart$find === void 0 ? void 0 : _cart$find.id) - 1;\n      console.log(index);\n      // const start = cart.slice(0, index)\n      // const end = cart.slice(index)\n      // console.log(start)\n      // console.log(index)\n      // console.log(end)\n\n      // // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\n      // return  [...start, {...data, count: data.count + num, price: data.price + num * (data.price / data.count)}, ...end]\n    },\n\n    removeItem: (state, action) => state.filter(item => item.id !== action.payload.id)\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","cartSlice","name","initialState","reducers","addCart","state","action","payload","updateCart","_cart$find","data","num","cart","index","find","item","id","console","log","removeItem","filter","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => [...state, action.payload],  \r\n        updateCart: (state: productsType[], action: PayloadAction<any>): any => {\r\n            const data = action.payload[0]\r\n            const num: number = action.payload[1]\r\n            const cart = current(state)\r\n            const index: number | undefined = cart.find(item => item.id === data.id)?.id! - 1\r\n            console.log(index)\r\n            // const start = cart.slice(0, index)\r\n            // const end = cart.slice(index)\r\n            // console.log(start)\r\n            // console.log(index)\r\n            // console.log(end)\r\n\r\n            // // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\r\n            // return  [...start, {...data, count: data.count + num, price: data.price + num * (data.price / data.count)}, ...end]\r\n        },\r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => state.filter((item: productsType) => item.id !== action.payload.id),\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer"],"mappings":"AAAA,SAAwBA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAItE,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACxGC,UAAU,EAAEA,CAACH,KAAqB,EAAEC,MAA0B,KAAU;MAAA,IAAAG,UAAA;MACpE,MAAMC,IAAI,GAAGJ,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MAC9B,MAAMI,GAAW,GAAGL,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MACrC,MAAMK,IAAI,GAAGb,OAAO,CAACM,KAAK,CAAC;MAC3B,MAAMQ,KAAyB,GAAG,EAAAJ,UAAA,GAAAG,IAAI,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC,cAAAP,UAAA,uBAAtCA,UAAA,CAAwCO,EAAE,IAAI,CAAC;MACjFC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MAClB;MACA;MACA;MACA;MACA;;MAEA;MACA;IACJ,CAAC;;IACDM,UAAU,EAAEA,CAACd,KAAqB,EAAEC,MAAmC,KAAUD,KAAK,CAACe,MAAM,CAAEL,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKV,MAAM,CAACC,OAAO,CAACS,EAAE;EACvJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACZ,OAAO;EAAEI,UAAU;EAAEW;AAAU,CAAC,GAAGnB,SAAS,CAACqB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAItB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { setCurrentUser } from '../../Slices/currentUser';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nconst useSignin = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [emailState, setEmailState] = useState(\"\");\n  const [userState, setUserState] = useState(\"\");\n  function validateEmail(value) {\n    let emailMsg;\n    if (!value) {\n      setEmailState(\"enter email\");\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      setEmailState(\"invalid email address\");\n    }\n    return emailMsg;\n  }\n  function validateUsername(value) {\n    let userMsg;\n    if (!value) {\n      setUserState(\"invalid email address\");\n    }\n    return userMsg;\n  }\n  const handleSubmit = userData => {\n    const current = users.find(user => user.username === userData.username && user.email === userData.email);\n    if (current && dispatch(setCurrentUser(current))) {\n      navigate(\"/items\");\n    } else {\n      navigate(\"/error\");\n    }\n  };\n  return {\n    emailState,\n    userState,\n    validateEmail,\n    validateUsername\n  };\n};\n_s(useSignin, \"KDNpVDlbY28urD/Kwfw+tVRrn1c=\", false, function () {\n  return [useDispatch, useNavigate];\n});\nexport default useSignin;","map":{"version":3,"names":["useState","setCurrentUser","useDispatch","useNavigate","useSignin","_s","dispatch","navigate","emailState","setEmailState","userState","setUserState","validateEmail","value","emailMsg","test","validateUsername","userMsg","handleSubmit","userData","current","users","find","user","username","email"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Components/Singin/useSignin.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { formType, userEmail, usersType } from '../../types/types'\r\nimport { setCurrentUser } from '../../Slices/currentUser'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst useSignin = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [emailState, setEmailState] = useState<string>(\"\")\r\n    const [userState, setUserState] = useState<string>(\"\")\r\n    \r\n    function validateEmail(value: string): formType{\r\n\r\n        let emailMsg: formType\r\n          if(!value){\r\n            setEmailState(\"enter email\")\r\n          }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)){\r\n            setEmailState(\"invalid email address\")\r\n          }\r\n          return emailMsg\r\n        }\r\n        \r\n        function validateUsername(value: string): formType{\r\n          let userMsg: formType\r\n          if (!value) {\r\n            setUserState(\"invalid email address\")\r\n          }\r\n          return userMsg\r\n        }\r\n\r\n        const handleSubmit = (userData: userEmail): void =>{\r\n            const current = users.find((user: usersType) => user.username === userData.username && user.email === userData.email)\r\n            if(current && dispatch(setCurrentUser(current))){\r\n              navigate(\"/items\") \r\n            }else{\r\n              navigate(\"/error\")\r\n            }\r\n          }\r\n  return {emailState, userState, validateEmail, validateUsername}\r\n}\r\n\r\nexport default useSignin"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AAEvC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAMK,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAEtD,SAASY,aAAaA,CAACC,KAAa,EAAW;IAE3C,IAAIC,QAAkB;IACpB,IAAG,CAACD,KAAK,EAAC;MACRJ,aAAa,CAAC,aAAa,CAAC;IAC9B,CAAC,MAAK,IAAG,CAAC,2CAA2C,CAACM,IAAI,CAACF,KAAK,CAAC,EAAC;MAChEJ,aAAa,CAAC,uBAAuB,CAAC;IACxC;IACA,OAAOK,QAAQ;EACjB;EAEA,SAASE,gBAAgBA,CAACH,KAAa,EAAW;IAChD,IAAII,OAAiB;IACrB,IAAI,CAACJ,KAAK,EAAE;MACVF,YAAY,CAAC,uBAAuB,CAAC;IACvC;IACA,OAAOM,OAAO;EAChB;EAEA,MAAMC,YAAY,GAAIC,QAAmB,IAAU;IAC/C,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAEC,IAAe,IAAKA,IAAI,CAACC,QAAQ,KAAKL,QAAQ,CAACK,QAAQ,IAAID,IAAI,CAACE,KAAK,KAAKN,QAAQ,CAACM,KAAK,CAAC;IACrH,IAAGL,OAAO,IAAId,QAAQ,CAACL,cAAc,CAACmB,OAAO,CAAC,CAAC,EAAC;MAC9Cb,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAI;MACHA,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EACT,OAAO;IAACC,UAAU;IAAEE,SAAS;IAAEE,aAAa;IAAEI;EAAgB,CAAC;AACjE,CAAC;AAAAX,EAAA,CAlCKD,SAAS;EAAA,QACMF,WAAW,EACXC,WAAW;AAAA;AAkChC,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
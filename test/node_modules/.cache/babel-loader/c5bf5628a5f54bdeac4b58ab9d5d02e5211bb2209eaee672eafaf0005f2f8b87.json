{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => [...state, action.payload],\n    updateCart: (state, action) => {\n      const data = action.payload[0];\n      const num = action.payload[1];\n      const cart = current(state);\n      const index = cart.indexOf(action.payload[0]);\n      const start = cart.slice(0, index);\n      const end = cart.slice(index + 1);\n      // console.log(index)\n      // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\n      if (index === -1) {\n        return [...start, {\n          ...data,\n          count: data.count + num,\n          price: data.price + num * (data.price / data.count)\n        }, ...end];\n      }\n    },\n    removeItem: (state, action) => state.filter(item => item.id !== action.payload.id)\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","cartSlice","name","initialState","reducers","addCart","state","action","payload","updateCart","data","num","cart","index","indexOf","start","slice","end","count","price","removeItem","filter","item","id","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => [...state, action.payload],  \r\n        updateCart: (state: productsType[], action: PayloadAction<any>): any => {\r\n            const data = action.payload[0]\r\n            const num: number = action.payload[1]\r\n            const cart = current(state)\r\n            const index = cart.indexOf(action.payload[0])\r\n            const start = cart.slice(0, index)\r\n            const end = cart.slice(index + 1)\r\n            // console.log(index)\r\n            // TODO: urish dzev hashvel aysqan erkar kodic xusapelu hamar\r\n            if(index === -1){\r\n                return  [...start, {...data, count: data.count + num, price: data.price + num * (data.price / data.count)}, ...end]\r\n            }\r\n        },\r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => state.filter((item: productsType) => item.id !== action.payload.id),\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer\r\n"],"mappings":"AAAA,SAAwBA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAItE,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACxGC,UAAU,EAAEA,CAACH,KAAqB,EAAEC,MAA0B,KAAU;MACpE,MAAMG,IAAI,GAAGH,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MAC9B,MAAMG,GAAW,GAAGJ,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MACrC,MAAMI,IAAI,GAAGZ,OAAO,CAACM,KAAK,CAAC;MAC3B,MAAMO,KAAK,GAAGD,IAAI,CAACE,OAAO,CAACP,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC7C,MAAMO,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC;MAClC,MAAMI,GAAG,GAAGL,IAAI,CAACI,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;MACjC;MACA;MACA,IAAGA,KAAK,KAAK,CAAC,CAAC,EAAC;QACZ,OAAQ,CAAC,GAAGE,KAAK,EAAE;UAAC,GAAGL,IAAI;UAAEQ,KAAK,EAAER,IAAI,CAACQ,KAAK,GAAGP,GAAG;UAAEQ,KAAK,EAAET,IAAI,CAACS,KAAK,GAAGR,GAAG,IAAID,IAAI,CAACS,KAAK,GAAGT,IAAI,CAACQ,KAAK;QAAC,CAAC,EAAE,GAAGD,GAAG,CAAC;MACvH;IACJ,CAAC;IACDG,UAAU,EAAEA,CAACd,KAAqB,EAAEC,MAAmC,KAAUD,KAAK,CAACe,MAAM,CAAEC,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKhB,MAAM,CAACC,OAAO,CAACe,EAAE;EACvJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAClB,OAAO;EAAEI,UAAU;EAAEW;AAAU,CAAC,GAAGnB,SAAS,CAACuB,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAIxB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    addCart: (state, action) => [...state, action.payload],\n    updateCart: (state, action) => {\n      const cart = current(state);\n      const [data, num] = action.payload;\n      const itemsIndex = cart.findIndex(item => item.id === data.id);\n      const start = cart.slice(0, itemsIndex);\n      const end = cart.slice(itemsIndex + 1);\n      const {\n        count,\n        price\n      } = cart[itemsIndex];\n      const currentPrice = price + num * (price / count);\n      console.log(action.payload);\n      return [...start, {\n        ...cart[itemsIndex],\n        count: count + num,\n        price: currentPrice\n      }, ...end];\n    },\n    removeItem: (state, action) => state.filter(item => item.id !== action.payload.id)\n  }\n});\nexport const {\n  addCart,\n  updateCart,\n  removeItem\n} = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"names":["createSlice","current","cartSlice","name","initialState","reducers","addCart","state","action","payload","updateCart","cart","data","num","itemsIndex","findIndex","item","id","start","slice","end","count","price","currentPrice","console","log","removeItem","filter","actions","cartReducer","reducer"],"sources":["C:/Users/MSI4/Desktop/task/test/src/Slices/cartSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice, current } from \"@reduxjs/toolkit\";\r\nimport { productsType } from \"../types/Types\";\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: [],\r\n    reducers: {\r\n        addCart: (state: productsType[], action: PayloadAction<productsType>): any => [...state, action.payload],  \r\n        updateCart: (state: productsType[], action: PayloadAction<[productsType & number]>): any => {\r\n            const cart = current(state)\r\n            const [data, num] = action.payload\r\n            const itemsIndex = cart.findIndex(item => item.id === data.id)\r\n            const start = cart.slice(0, itemsIndex)\r\n            const end = cart.slice(itemsIndex + 1)            \r\n            const {count, price} = cart[itemsIndex]\r\n            const currentPrice = price + num * (price / count)\r\n            console.log(action.payload)\r\n\r\n            return  [...start, {...cart[itemsIndex], count: count + num, price: currentPrice}, ...end]\r\n        },\r\n        removeItem: (state: productsType[], action: PayloadAction<productsType>): any => state.filter((item: productsType) => item.id !== action.payload.id),\r\n    }\r\n})\r\n\r\nexport const {addCart, updateCart, removeItem} = cartSlice.actions\r\nexport const cartReducer =  cartSlice.reducer"],"mappings":"AAAA,SAAwBA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAItE,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAqB,EAAEC,MAAmC,KAAU,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IACxGC,UAAU,EAAEA,CAACH,KAAqB,EAAEC,MAA8C,KAAU;MACxF,MAAMG,IAAI,GAAGV,OAAO,CAACM,KAAK,CAAC;MAC3B,MAAM,CAACK,IAAI,EAAEC,GAAG,CAAC,GAAGL,MAAM,CAACC,OAAO;MAClC,MAAMK,UAAU,GAAGH,IAAI,CAACI,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAC9D,MAAMC,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC,EAAEL,UAAU,CAAC;MACvC,MAAMM,GAAG,GAAGT,IAAI,CAACQ,KAAK,CAACL,UAAU,GAAG,CAAC,CAAC;MACtC,MAAM;QAACO,KAAK;QAAEC;MAAK,CAAC,GAAGX,IAAI,CAACG,UAAU,CAAC;MACvC,MAAMS,YAAY,GAAGD,KAAK,GAAGT,GAAG,IAAIS,KAAK,GAAGD,KAAK,CAAC;MAClDG,OAAO,CAACC,GAAG,CAACjB,MAAM,CAACC,OAAO,CAAC;MAE3B,OAAQ,CAAC,GAAGS,KAAK,EAAE;QAAC,GAAGP,IAAI,CAACG,UAAU,CAAC;QAAEO,KAAK,EAAEA,KAAK,GAAGR,GAAG;QAAES,KAAK,EAAEC;MAAY,CAAC,EAAE,GAAGH,GAAG,CAAC;IAC9F,CAAC;IACDM,UAAU,EAAEA,CAACnB,KAAqB,EAAEC,MAAmC,KAAUD,KAAK,CAACoB,MAAM,CAAEX,IAAkB,IAAKA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAACQ,EAAE;EACvJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACX,OAAO;EAAEI,UAAU;EAAEgB;AAAU,CAAC,GAAGxB,SAAS,CAAC0B,OAAO;AAClE,OAAO,MAAMC,WAAW,GAAI3B,SAAS,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}